{"version":3,"file":"static/js/336.1b316469.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","components/ContactItem/ContactItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactFormEdit/ContactFormEdit.styled.jsx","components/ContactFormEdit/ContactFormEdit.jsx","components/ContactItem/ContactItem.jsx","helpers/getRandomHexColor.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/ContactsPage.js","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilterSection = styled.div`\npadding: 30px 0 0;\n  position: sticky;\n  top: 0px;\n  z-index: 2;\n  padding-top: 30px;\n  background: linear-gradient(to bottom, rgb(242, 242, 242), rgba(242, 242, 242, 0.85));\n  `;\n\nexport const FilterContainer = styled.div`\n  padding: 0 15px;\n`;\n\nexport const FilterName = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  font-weight: 700;\n  font-size: 12px;\n  color: #333;\n\n  transition: color 300ms ease, font-size 300ms ease;\n\n  :focus-within {\n    color: #000;\n    font-size: 14px;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  position: absolute;\n  top: 55%;\n  left: 10px;\n  transition: color 300ms ease;\n  color: ${props => (props.isEmptyFilter ? '#f4442e' : '#777')};\n`;\n\nexport const LabelP = styled.p`\n  margin-left: 6px;\n  height: 16px;\n`;\n\nexport const FilterInput = styled.input`\n  min-width: 180px;\n  padding: 10px;\n  padding-left: 26px;\n  margin-right: 20px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-color: 2ecc71;\n  border-radius: 10px;\n  color: #333;\n  outline: none;\n  transition: border-color 300ms ease;\n\n  :hover,\n  :focus {\n    border-color: ${props => (props.isEmptyFilter ? '#f4442e' : '#2ecc71')};\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DebounceInput } from 'react-debounce-input';\nimport { BsSearch } from 'react-icons/bs';\nimport { setFilter } from 'redux/slices/filterSlice';\nimport {\n  FilterSection,\n  FilterContainer,\n  FilterName,\n  LabelP,\n  FilterInput,\n  IconWrapper,\n} from './Filter.styled';\nimport {\n  selectFilter,\n  memoizedFilteredContactsSelector,\n} from 'redux/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const filteredContacts = useSelector(memoizedFilteredContactsSelector);\n\n  const isEmptyFilter = filteredContacts.length === 0;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setFilter(filter));\n  }, [filter, dispatch]);\n\n  const onChangeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <FilterSection>\n      <FilterContainer>\n      <FilterName>\n      <IconWrapper isEmptyFilter={isEmptyFilter}>\n        <BsSearch />\n      </IconWrapper>\n      <LabelP>Find contacts by Name</LabelP>\n      <DebounceInput\n        element={FilterInput}\n        type=\"text\"\n        value={filter}\n        debounceTimeout={500}\n        onChange={onChangeFilter}\n        isEmptyFilter={isEmptyFilter}\n      />\n    </FilterName>\n    </FilterContainer>\n    </FilterSection>\n    \n    \n  );\n};\n\nexport default Filter;\n","import { ProgressBar, ThreeDots, RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ProgressBar   \n      ariaLabel=\"progress-bar-loading\"\n      wrapperStyle={{\n        position: 'absolute',\n        top: -27,\n        left: -4,\n        borderRadius: '0px',\n        zIndex: 1,\n      }}\n      wrapperClass=\"progress-bar-wrapper\"\n      borderColor=\"\"\n      barColor=\"rgb(244, 68, 46, 0.6)\"\n    />\n  );\n};\n\nconst LoaderThreeDots = () => {\n  return (\n    <ThreeDots\n      height=\"20\"\n      width=\"60\"\n      radius=\"1\"\n      color=\"#27ae60\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{\n      }}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nconst LoaderRotatingLines = () => {\n  return (\n    <div>\n      <RotatingLines\n        strokeColor=\"#27ae60\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"60\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport { Loader, LoaderThreeDots, LoaderRotatingLines };\n","import styled, { keyframes } from 'styled-components';\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  to {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n`;\n\nexport const ContactLi = styled.li`\n  display: flex;\n`;\n\nexport const FirstLetterContactsGroupDiv = styled.div`\n  font-size: 16px;\n`;\n\nexport const ContactContainerDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  min-width: 210px;\n  border: 1px solid #27ae60;\n  border-radius: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n\n  :hover,\n  :focus{\n      border: 1px solid #2ecc71;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    textarea:focus {\n  outline: 2px solid red; /* Customize the focus ring with a blue border */\n}\n  }\n`;\n\nexport const FirstLetterNameDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 32px;\n  min-height: 32px;\n  font-size: 14px;\n  color: #fff;\n  border-radius: 50%;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n`;\n\nexport const ContactCardDiv = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 4px 8px;\n  gap: 10px;\n`;\n\nexport const ContactContentP = styled.p`\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  width: 100%;\n  cursor: pointer;\n`;\n\nexport const NameSpan = styled.span`\nwhite-space: nowrap;\n  font-size: 16px;\n`;\nexport const PhoneSpan = styled.span`\n  font-size: 12px;\n`;\n\nexport const CallA = styled.a`\n  padding-left: 20px;\n  cursor: default;\n`;\n\nexport const ContainerIconSpan = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  font-size: 14px;\n  background-color: #27ae60;\n  color: #fff;\n  border-radius: 50%;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n  transition: background-color 300ms, color 250ms ease;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    background-color: #2ecc71;\n  }\n`;\n\nexport const ContactActionsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-top: 1px solid #27ae60;\n  background-color: #e7e7e7;\n  border-radius: 10px;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n  gap: 60px;\n  padding: 8px 8px;\n  animation: ${({ open }) => (open ? fadeIn : fadeOut)} 300ms ease;\n`;\n\nexport const EditContactBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2px 4px;\n  gap: 4px;\n  width: 68px;\n  height: 26px;\n  font-size: 14px;\n  background-color: #27ae60;\n  color: #fff;\n  outline: none;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n  transition: box-shadow 300ms, background-color 300ms, color 250ms ease;\n\n  :hover,\n  :focus {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    background-color: #fff;\n    color: #27ae60;\n  }\n`;\n\nexport const ContactBtn = styled.button`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  width: 68px;\n  height: 26px;\n  padding: 6px 4px;\n  font-size: 14px;\n  background-color: #f4442e;\n  color: #fff;\n  outline: none;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n  transition: box-shadow 300ms, background-color 300ms, color 250ms ease;\n\n  :hover,\n  :focus,\n  :active {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    background-color: #fff;\n    color: #f4442e;\n  }\n\n  :disabled {\n    background-color: #f4442e;\n    color: #fff;\n  }\n`;\n\nexport const LetterContainerDiv = styled.div`\nmargin-left: 8px;\n  width: 15px;\n  height: 20px;\n`","import styled, { keyframes } from 'styled-components';\nimport {\n  fadeIn,\n  fadeOut,\n  zoomIn,\n  zoomOut,\n} from 'react-animations';\n\nconst fadeInAnimation = keyframes`${fadeIn}`;\nconst fadeOutAnimation = keyframes`${fadeOut}`;\n\nconst zoomInAnimation = keyframes`${zoomIn}`;\nconst zoomOutAnimation = keyframes`${zoomOut}`;\n\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(247, 247, 247, 0.3);\n  backdrop-filter: blur(1px);\n  z-index: 998;\n  overflow-y: scroll;\n  overflow: hidden;\n\n  animation: 500ms ${fadeInAnimation}; // при відкритті\n  /* animation: 500ms ${fadeOutAnimation}; // при закритті  */\n`;\n\nexport const ModalDiv = styled.div`\n  position: absolute;\n  padding: 60px 20px;\n  min-width: calc(100vw - 100px);\n  min-height: calc(100vh - 300px);\n  background-color: #f2f2f2;\n  border-radius: 18px;\n  border: 1px solid #27ae60;\n  \n  animation: 300ms ${zoomInAnimation};// при відкритті \n  /* animation: 300ms ${zoomOutAnimation};// при закритті  */\n  `;\n\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  margin: 0;\n  border-radius: 50%;\n  background: inherit;\n  font-size: 60px;\n  background-color: #27ae60;\n  color: #fff;\n  outline: none;\n  border: none;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n  transition: box-shadow 300ms, background-color 300ms, color 300ms ease;\n\n  :hover,\n  :focus {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    background-color: #fff;\n    color: #f4442e;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport {RiCloseCircleLine } from 'react-icons/ri'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createPortal } from 'react-dom';\nimport {closeModal} from '../../redux/slices/modalSlice';\nimport { ModalBackdrop, ModalDiv,  CloseBtn } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({contactId, children }) {\n  const showModal = useSelector((state) => state.modal.contactModals[contactId] || false);\n  const isModalOpen = useSelector((state) => state.modal.isModalOpen || false); \n\n  const dispatch = useDispatch();\n\n  const handleCloseModal = () => {\n    dispatch(closeModal(contactId));\n  }\n  \n  useEffect(() => {\n    const handleKeyDown = e => {\n      \n      if (e.code === 'Escape') {\n        dispatch(closeModal(contactId));\n        \n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [contactId, dispatch]); \n\n  const handleContentClick = (e) => {\n    e.stopPropagation();\n  };\n\n\n  // const handleAnimationEnd = (id) => {\n  //   if (!showModal) {\n  //     dispatch(closeModal(id));\n  //   }\n  // };\n\n    \n\n  console.log(isModalOpen);\n  console.log(showModal);\n\n\n  return createPortal(\n    <ModalBackdrop onClick={handleCloseModal} showModal={isModalOpen}>\n      <ModalDiv showModal={isModalOpen}  onClick={handleContentClick}>\n      <CloseBtn type='button' onClick={handleCloseModal}>\n        <RiCloseCircleLine/>\n      </CloseBtn>{children}</ModalDiv>\n    </ModalBackdrop>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  margin-bottom: 30px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n`;\n\nexport const LabelForm = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  font-weight: 700;\n  font-size: 12px;\n  color: #333;\n  transition: font-size 300ms, color 300ms ease;\n\n  :focus-within {\n    color: #000;\n    font-size: 14px;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  position: absolute;\n  top: 55%;\n  left: 10px;\n  transition: color 300ms ease;\n  color: #777;\n\n\n`;\n\nexport const LabelSpan = styled.span`\n  margin-left: 6px;\n  height: 16px;\n`;\n\nexport const InputForm = styled.input`\n  min-width: 180px;\n  padding: 10px;\n  padding-left: 26px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  color: #333;\n  outline: none;\n  transition: border-color 300ms ease;\n\n  :hover,\n  :focus {\n    border-color: #27ae60;\n  }\n\n  :not(:placeholder-shown):required:valid {\n    border-color: #27ae60;\n  }\n\n  :not(:placeholder-shown):required:invalid {\n    border-color: #f4442e;\n  }\n\n  ::placeholder {\n    color: #777;\n  }\n`;\n\nexport const BtnForm = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 5px;\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n  background-color: #27ae60;\n  color: #fff;\n  outline: none;\n  border: none;\n  border-radius: 10px;\n  cursor: ${props => (props.isLoading ? 'not-allowed' : 'pointer')};\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n  transition: box-shadow 300ms, background-color 300ms ease;\n  \n\n  :hover,\n  :focus {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    background-color: ${props => (props.isLoading ? '#27ae60' : '#2ecc71')};\n  }\n\n  :disabled{\n    background-color: rgba(39, 174, 96, 0.6);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n    cursor: not-allowed;\n  }\n`;\n\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BsPersonPlus, BsTelephonePlus } from 'react-icons/bs';\nimport { editContact } from 'redux/operations/contactsOperations';\nimport { isLoadingSelector } from 'redux/selectors';\nimport {\n  FormContainer,\n  Form,\n  IconWrapper,\n  LabelForm,\n  LabelSpan,\n  InputForm,\n  BtnForm,\n} from './ContactFormEdit.styled';\nimport { closeModal } from '../../redux/slices/modalSlice';\n\nfunction ContactFormEdit({contact}) {\n  const isLoading = useSelector(isLoadingSelector);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value.replace(/(^|\\s)\\S/g, match => match.toUpperCase()));\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleEditContact = async (e) => {\n    e.preventDefault();\n  \n    try {\n      const patchResponse = await dispatch(editContact({ id: contact.id, name, number }));\n  \n      if (patchResponse.meta.requestStatus === 'fulfilled') {\n        dispatch(closeModal(contact.id));\n      }\n      setName('');\n      setNumber('');\n    } catch (error) {\n      console.error('Failed to edit contact:', error);\n    }\n  };\n\n  return (\n    <FormContainer>\n      <Form onSubmit={handleEditContact}>\n        <LabelForm>\n          <IconWrapper>\n            <BsPersonPlus />\n          </IconWrapper>\n          <LabelSpan>Name</LabelSpan>\n          <InputForm\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-ЯґҐєЄіІїЇ]+(([' \\-][a-zA-Zа-яА-ЯґҐєЄіІїЇ ])?[a-zA-Zа-яА-ЯґҐєЄіІїЇ]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder={contact.name}\n            onChange={handleChange}\n          />\n        </LabelForm>\n        <LabelForm>\n          <IconWrapper>\n            <BsTelephonePlus />\n          </IconWrapper>\n          <LabelSpan>Number</LabelSpan>\n          <InputForm\n            type=\"tel\"\n            value={number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder={contact.number}\n            onChange={handleChange}\n          />\n        </LabelForm>\n\n        <BtnForm type=\"submit\" isLoading={isLoading} disabled={isLoading}>\n          Edit contact\n        </BtnForm>\n      </Form>\n    </FormContainer>\n  );\n}\n\nexport default ContactFormEdit;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BsPencil, BsTelephone, BsDashCircle } from 'react-icons/bs';\nimport { deleteContact } from 'redux/operations/contactsOperations';\nimport { uniqueFirstLettersContactsSelector, modalContactSelector } from 'redux/selectors';\nimport {\n  ContactLi,\n  FirstLetterContactsGroupDiv,\n  ContactContainerDiv,\n  FirstLetterNameDiv,\n  ContactCardDiv,\n  ContactContentP,\n  NameSpan,\n  PhoneSpan,\n  CallA,\n  ContainerIconSpan,\n  ContactActionsContainer,\n  EditContactBtn,\n  ContactBtn,\n  LetterContainerDiv, \n} from './ContactItem.styled';\nimport { Loader } from '../Loader/Loader';\nimport { getRandomHexColor } from '../../helpers/getRandomHexColor';\nimport Modal from '../Modal'\nimport ContactFormEdit from 'components/ContactFormEdit';\nimport {openModal} from 'redux/slices/modalSlice'\n\n\nconst ContactItem = ({ contact, selectedContactId, toggleActions }) => {\n  const uniqueFirstLetters = useSelector(uniqueFirstLettersContactsSelector);\n  const showModal = useSelector(modalContactSelector(contact.id));\n\n  const dispatch = useDispatch();\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [contactColors, setContactColors] = useState({});\n\n  const { id, name, number } = contact;\n  \n  const trimmedName =\n    contact.name.length > 24 ? `${contact.name.slice(0, 20)}...` : contact.name;\n\n  const isActionsContainerOpen = selectedContactId === contact.id;\n \n\n  useEffect(() => {\n    if (!contactColors[contact.id]) {\n      const newColor = getRandomHexColor();\n      setContactColors(prevColors => ({\n        ...prevColors,\n        [contact.id]: newColor,\n      }));\n    }\n  }, [contact.id, contactColors]);\n\n  const onDeleteContact = contactId => {\n    setIsDeleting(true);\n    dispatch(deleteContact(contactId)).finally(() => {\n      setIsDeleting(false);\n    });\n  };\n\n  const handleEditButtonClick = () => {\n    dispatch(openModal(contact.id));\n  };\n\n  return (\n    <ContactLi>\n      <ContactContainerDiv>\n        <ContactCardDiv>\n          <FirstLetterNameDiv\n            style={{ backgroundColor: contactColors[contact.id] }}\n          >\n            {name.charAt(0)}\n          </FirstLetterNameDiv>\n          <ContactContentP onClick={() => toggleActions(id)}>\n            <NameSpan>{trimmedName}</NameSpan>\n            <PhoneSpan>{number}</PhoneSpan>\n          </ContactContentP>\n          <CallA href={`tel:${number}`} title=\"Call\">\n            <ContainerIconSpan>\n              <BsTelephone />\n            </ContainerIconSpan>\n          </CallA>\n        </ContactCardDiv>\n\n        {isActionsContainerOpen && (\n          <ContactActionsContainer>\n            <EditContactBtn onClick={handleEditButtonClick}>\n              <BsPencil />\n              Edit\n            </EditContactBtn>\n            <ContactBtn\n              type=\"button\"\n              disabled={isDeleting}\n              onClick={() => onDeleteContact(contact.id)}\n            >\n              <BsDashCircle />\n              {isDeleting && <Loader />}\n              Delete\n            </ContactBtn>\n          </ContactActionsContainer>\n        )}\n      </ContactContainerDiv>\n      <LetterContainerDiv>\n        {uniqueFirstLetters.includes(id) && (\n          <FirstLetterContactsGroupDiv>\n            {name.charAt(0)}\n          </FirstLetterContactsGroupDiv>\n        )}\n      </LetterContainerDiv>\n      {showModal && (\n        <Modal contactId={contact.id}>\n            <ContactFormEdit\n            contact={contact}\n            \n          />\n        </Modal>\n      )}\n    </ContactLi>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  selectedContactId: PropTypes.string,\n  toggleActions: PropTypes.func,\n};\n\nexport default ContactItem;\n","export const getRandomHexColor = () => {\n  const minChannelValue = 40; // Adjust this value to control the minimum brightness of the color\n\n  let randomColor;\n  do {\n    randomColor = `#${Math.floor(Math.random() * 16777215)\n      .toString(16)\n      .padStart(6, '0')}`;\n\n    // Parse the color to get individual RGB channel values\n    const r = parseInt(randomColor.substring(1, 3), 10);\n    const g = parseInt(randomColor.substring(3, 5), 16);\n    const b = parseInt(randomColor.substring(5, 7), 8);\n\n    // Check if any channel is below the minimum threshold\n    if (r < minChannelValue || g < minChannelValue || b < minChannelValue) {\n      continue; // Regenerate a new color if any channel is too low\n    }\n\n    // Combine the RGB channels and convert back to hex format\n    randomColor = `#${((r << 16) | (g << 8) | b).toString(16).padStart(6, '0')}`;\n  } while (!randomColor);\n\n  return randomColor;\n};","import styled from 'styled-components';\n\nexport const ContactsContainer = styled.div`\n  padding: 0 15px;\n`\nexport const ContactUl = styled.ul`\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 10px;\n  margin: 0;\n  height: 30px;\n`;\n\nexport const LoaderRotatingLinesContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgb(247, 247, 247, 0.3);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  backdrop-filter: blur(4px);\n  z-index: 999;\n`;\n\nexport const EmptyContactsMessage = styled.p`\n  padding: 0;\n  margin: 20px;\n  font-size: 24px;\n  text-align: center;\n`;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { LoaderThreeDots, LoaderRotatingLines } from '../Loader/Loader';\nimport ContactItem from '../ContactItem';\nimport { fetchContacts } from 'redux/operations/contactsOperations';\nimport {\n  contactsSelector,\n  isLoadingSelector,\n  errorSelector,\n  memoizedFilteredContactsSelector,\n} from 'redux/selectors';\nimport {\n  ContactsContainer,\n  LoaderContainer,\n  LoaderRotatingLinesContainer,\n  ContactUl,\n  EmptyContactsMessage,\n} from './ContactList.styled';\n\nconst ContactList = () => {\n  const isLoading = useSelector(isLoadingSelector);\n  const error = useSelector(errorSelector);\n  const filteredContacts = useSelector(memoizedFilteredContactsSelector);\n  const contacts = useSelector(contactsSelector);\n\n  const [isFetchingContacts, setIsFetchingContacts] = useState(false);\n  const [showEmptyMessage, setShowEmptyMessage] = useState(false);\n  const [selectedContactId, setSelectedContactId] = useState(null);\n\n\n  const dispatch = useDispatch();\n\n  const contactsLength = contacts.length;\n  const isEmptyFilter = filteredContacts.length === 0;\n\n  useEffect(() => {\n    setIsFetchingContacts(true);\n    dispatch(fetchContacts()).finally(() => {\n      setIsFetchingContacts(false);\n      setShowEmptyMessage(true);\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    error && toast.error(error);\n  }, [error]);\n\n  const toggleActions = (contactId) => {\n    setSelectedContactId((prevId) => (prevId === contactId ? null : contactId));\n  };\n\n  if (isFetchingContacts) {\n    return (\n      <LoaderRotatingLinesContainer>\n        <LoaderRotatingLines />\n      </LoaderRotatingLinesContainer>\n    );\n  }\n\n  if (contactsLength === 0 && showEmptyMessage && !error) {\n    return (\n      <EmptyContactsMessage>Please add your first contact</EmptyContactsMessage>\n    );\n  }\n\n  if (contactsLength > 0 && isEmptyFilter) {\n    return <EmptyContactsMessage>No matching contacts</EmptyContactsMessage>;\n  }\n\n  return (\n    <section>\n      <ContactsContainer>\n      <LoaderContainer>\n        {isLoading && showEmptyMessage && <LoaderThreeDots />}\n      </LoaderContainer>\n      {!isEmptyFilter && (\n        <ContactUl>\n          {filteredContacts.map(contact => (\n            <ContactItem\n              key={contact.id}\n              contact={contact}\n              selectedContactId={selectedContactId}\n              toggleActions={toggleActions}\n            />\n          ))}\n        </ContactUl>\n      )}\n    </ContactsContainer>\n    </section>\n    \n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n padding: 30px 15px 0;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  margin-right: 20px;\n`;\n\nexport const LabelForm = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  font-weight: 700;\n  font-size: 12px;\n  color: #333;\n  transition: color 300ms ease;\n  transition: font-size 300ms ease;\n\n  :focus-within {\n    color: #000;\n    font-size: 14px;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  position: absolute;\n  top: 55%;\n  left: 10px;\n  transition: color 300ms ease;\n  color: #777;\n\n\n`;\n\nexport const LabelSpan = styled.span`\n  margin-left: 6px;\n  height: 16px;\n`;\n\nexport const InputForm = styled.input`\n  min-width: 180px;\n  padding: 10px;\n  padding-left: 26px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  color: #333;\n  outline: none;\n  transition: border-color 300ms ease;\n\n  :hover,\n  :focus {\n    border-color: #27ae60;\n  }\n\n  :not(:placeholder-shown):required:valid {\n    border-color: #27ae60;\n  }\n\n  :not(:placeholder-shown):required:invalid {\n    border-color: #f4442e;\n  }\n\n  ::placeholder {\n    color: #777;\n  }\n`;\n\nexport const BtnForm = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 5px;\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n  background-color: #27ae60;\n  color: #fff;\n  outline: none;\n  border: none;\n  border-radius: 10px;\n  cursor: ${props => (props.isLoading ? 'not-allowed' : 'pointer')};\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n  transition: box-shadow 300ms, background-color 300ms ease;\n  \n\n  :hover,\n  :focus {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    background-color: ${props => (props.isLoading ? '#27ae60' : '#2ecc71')};\n  }\n\n  :disabled{\n    background-color: rgba(39, 174, 96, 0.6);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n    cursor: not-allowed;\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BsPersonPlus, BsTelephonePlus } from 'react-icons/bs';\nimport { addContact } from 'redux/operations/contactsOperations';\nimport { isLoadingSelector } from 'redux/selectors';\nimport {\n  FormContainer,\n  Form,\n  IconWrapper,\n  LabelForm,\n  LabelSpan,\n  InputForm,\n  BtnForm,\n} from './ContactForm.styled';\n\nfunction ContactForm() {\n  const isLoading = useSelector(isLoadingSelector);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value.replace(/(^|\\s)\\S/g, match => match.toUpperCase()));\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleAddContact = e => {\n    e.preventDefault();\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  const isButtonDisabled = name.trim() === '' || number.trim() === '';\n\n  return (\n    <section>\n      <FormContainer>\n      <Form onSubmit={handleAddContact}>\n        <LabelForm>\n          <IconWrapper>\n            <BsPersonPlus />\n          </IconWrapper>\n          <LabelSpan>Name</LabelSpan>\n          <InputForm\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-ЯґҐєЄіІїЇ]+(([' \\-][a-zA-Zа-яА-ЯґҐєЄіІїЇ ])?[a-zA-Zа-яА-ЯґҐєЄіІїЇ]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter name\"\n            onChange={handleChange}\n          />\n        </LabelForm>\n        <LabelForm>\n          <IconWrapper>\n            <BsTelephonePlus />\n          </IconWrapper>\n          <LabelSpan>Number</LabelSpan>\n          <InputForm\n            type=\"tel\"\n            value={number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter phone number\"\n            onChange={handleChange}\n          />\n        </LabelForm>\n\n        <BtnForm type=\"submit\" isLoading={isLoading} disabled={isLoading || isButtonDisabled}>\n          Add contact\n        </BtnForm>\n      </Form>\n    </FormContainer>\n    </section>\n  );\n}\n\nexport default ContactForm;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport  Filter  from '../components/Filter';\nimport ContactList  from '../components/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\n// import { isLoadingSelector } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations/contactsOperations';\n\nexport default function ContactsPage () {\n  const dispatch = useDispatch();\n  // const isLoading = useSelector(isLoadingSelector);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      {/* <div>{isLoading && }</div> */}\n      <ContactList />\n    </>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const contactsSelector = state => state.contacts.items;\n\nconst memoizedContactsSelector = createSelector(contactsSelector, contacts =>\n  [...contacts].sort((a, b) => a.name.localeCompare(b.name))\n);\n\nexport const isLoadingSelector = state => state.contacts.isLoading;\nexport const errorSelector = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const memoizedFilteredContactsSelector = createSelector(\n  [memoizedContactsSelector, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\nexport const uniqueFirstLettersContactsSelector = createSelector(\n  [memoizedFilteredContactsSelector],\n  (filteredContacts) => {\n    const firstLetters = {};\n\n    filteredContacts.forEach((contact) => {\n      const firstLetter = contact.name.charAt(0).toUpperCase();\n      if (!firstLetters[firstLetter]) {\n        firstLetters[firstLetter] = contact.id;\n      }\n    });\n\n    return Object.values(firstLetters);\n  }\n);\n\nexport const modalContactSelector = (contactId) => (state) =>\n  state.modal.contactModals[contactId] || false;"],"names":["FilterSection","styled","FilterContainer","FilterName","IconWrapper","props","isEmptyFilter","LabelP","FilterInput","filter","useSelector","selectFilter","memoizedFilteredContactsSelector","length","dispatch","useDispatch","useEffect","setFilter","DebounceInput","element","type","value","debounceTimeout","onChange","e","target","Loader","ariaLabel","wrapperStyle","position","top","left","borderRadius","zIndex","wrapperClass","borderColor","barColor","LoaderThreeDots","height","width","radius","color","wrapperClassName","visible","LoaderRotatingLines","strokeColor","strokeWidth","animationDuration","fadeOut","keyframes","fadeIn","ContactLi","FirstLetterContactsGroupDiv","ContactContainerDiv","FirstLetterNameDiv","ContactCardDiv","ContactContentP","NameSpan","PhoneSpan","CallA","ContainerIconSpan","ContactActionsContainer","open","EditContactBtn","ContactBtn","LetterContainerDiv","fadeInAnimation","fadeOutAnimation","zoomInAnimation","zoomIn","zoomOutAnimation","zoomOut","ModalBackdrop","ModalDiv","CloseBtn","modalRoot","document","querySelector","contactId","children","showModal","state","modal","contactModals","isModalOpen","handleCloseModal","closeModal","handleKeyDown","code","window","addEventListener","removeEventListener","console","log","createPortal","onClick","stopPropagation","FormContainer","Form","LabelForm","LabelSpan","InputForm","BtnForm","isLoading","contact","isLoadingSelector","useState","name","setName","number","setNumber","handleChange","currentTarget","replace","match","toUpperCase","handleEditContact","preventDefault","editContact","id","meta","requestStatus","error","onSubmit","pattern","title","required","placeholder","disabled","selectedContactId","toggleActions","uniqueFirstLetters","uniqueFirstLettersContactsSelector","modalContactSelector","isDeleting","setIsDeleting","contactColors","setContactColors","trimmedName","slice","isActionsContainerOpen","newColor","randomColor","Math","floor","random","toString","padStart","r","parseInt","substring","g","b","getRandomHexColor","prevColors","style","backgroundColor","charAt","href","openModal","deleteContact","finally","includes","ContactsContainer","ContactUl","LoaderContainer","LoaderRotatingLinesContainer","EmptyContactsMessage","errorSelector","filteredContacts","contacts","contactsSelector","isFetchingContacts","setIsFetchingContacts","showEmptyMessage","setShowEmptyMessage","setSelectedContactId","contactsLength","fetchContacts","toast","prevId","map","isButtonDisabled","trim","addContact","ContactsPage","items","memoizedContactsSelector","createSelector","sort","a","localeCompare","normalizedFilter","toLowerCase","firstLetters","forEach","firstLetter","Object","values"],"sourceRoot":""}