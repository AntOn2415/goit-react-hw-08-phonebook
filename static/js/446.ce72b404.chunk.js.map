{"version":3,"file":"static/js/446.ce72b404.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactFormEdit/ContactFormEdit.styled.jsx","components/ContactFormEdit/ContactFormEdit.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/RecentlyAddedContactItem/RecentlyAddedContactItem.styled.jsx","components/RecentlyAddedContactItem/RecentlyAddedContactItem.jsx","components/RecentlyAddedContacts/RecentlyAddedContacts.styled.jsx","components/RecentlyAddedContacts/RecentlyAddedContacts.jsx","components/ContactForm/ContactForm.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage.js","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport {VisibilityHidden, IconWrapperCommon, InputCommon} from '../componentStyles';\n\nexport const FilterSection = styled.div`\n  position: sticky;\n  top: 0px;\n  z-index: 1;\n  padding-top: 30px;\n  background: linear-gradient(\n    to bottom,\n    ${({ theme }) => theme.colors.backgroundGradient},\n  ${({ theme }) => theme.colors.backgroundGradient},\n  ${({ theme }) => theme.colors.backgroundGradient},\n  ${({ theme }) => theme.colors.backgroundGradient},\n  ${({ theme }) => theme.colors.backgroundGradientTransparent}\n  );\n`;\n\nexport const TitleHiddenH2 = styled.h2`\n  ${VisibilityHidden};\n`\n\nexport const FilterContainer = styled.div`\nposition: relative;\n  padding: 0;\n`;\n\nexport const FilterName = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  font-weight: 700;\n  font-size: ${({ theme }) => theme.fontSizes.tiny};\n  color:${({ theme }) => theme.colors.text};\n\n  transition: color 300ms ease, font-size 300ms ease;\n\n  :focus-within {\n    color: ${({ theme }) => theme.colors.textFocus};\n    font-size: ${({ theme }) => theme.fontSizes.small};\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  ${IconWrapperCommon};\n  color: ${props => (props.isEmptyFilter ? props.theme.colors.danger : props.theme.colors.placeholder)};\n\n`;\n\nexport const LabelP = styled.p`\n  margin-left: 6px;\n  height: 16px;\n`;\n\nexport const FilterInput = styled.input`\n  ${InputCommon};\n border: ${({ theme }) => theme.borders.border};\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  border-radius:  ${({ theme }) => theme.borders.borderRadius};\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.backgroundSecondary};\n    margin-right: 20px;\n    padding-left: 26px;\n  \n  :hover,\n  :focus {\n    border-color: ${props => (props.isEmptyFilter ? props.theme.colors.danger : props.theme.colors.secondary)};\n  }\n  \n  @media screen and (min-width: 716px) {\n    min-width: 200px;\n  }\n  \n  @media screen and (min-width: 717px) {\n    min-width: 390px;\n  }\n  \n  @media screen and (min-width: 668px) and (max-width: 717px) {\n    max-width: 340px;\n  }\n  \n\n`;\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 10px;\n  margin: 0;\n  height: 30px;\n`;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DebounceInput } from 'react-debounce-input';\nimport { BsSearch } from 'react-icons/bs';\nimport { setFilter } from 'redux/slices/filterSlice';\nimport { LoaderThreeDots } from '../Loader/Loader';\nimport { useThemeContext } from '../../hooks/ThemeContext'; \nimport {\n  FilterSection,\n  TitleHiddenH2,\n  FilterContainer,\n  FilterName,\n  LabelP,\n  FilterInput,\n  IconWrapper,\n  LoaderContainer,\n} from './Filter.styled';\nimport {\n  selectFilter,\n  memoizedFilteredContactsSelector,\n  isLoadingSelector,\n} from 'redux/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(isLoadingSelector);\n  const filteredContacts = useSelector(memoizedFilteredContactsSelector);\n\n  const isEmptyFilter = filteredContacts.length === 0;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setFilter(filter));\n  }, [filter, dispatch]);\n\n  const onChangeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  const firstChar = filter.trim().charAt(0);\n\n  let label = 'Find contacts by Name or Number';\n\n  if (firstChar !== '') {\n    label = isNaN(firstChar)\n      ? 'Find contacts by Name'\n      : 'Find contacts by Number';\n  };\n  \nuseThemeContext();\n\n  return (\n    <FilterSection>\n      <TitleHiddenH2>Find contacts by Name or Number</TitleHiddenH2>\n      <FilterContainer>\n        <FilterName>\n          <IconWrapper isEmptyFilter={isEmptyFilter}>\n            <BsSearch />\n          </IconWrapper>\n          <LabelP>{label}</LabelP>\n          <DebounceInput\n            element={FilterInput}\n            type=\"text\"\n            value={filter}\n            debounceTimeout={500}\n            onChange={onChangeFilter}\n            isEmptyFilter={isEmptyFilter}\n          />\n        </FilterName>\n        <LoaderContainer>\n        {isLoading && !isEmptyFilter && <LoaderThreeDots />}\n        </LoaderContainer>\n      </FilterContainer>\n    </FilterSection>\n  );\n};\n\nexport default Filter;\n\n\n","import styled, { keyframes } from 'styled-components';\nimport { fadeInDown, fadeInUp } from 'react-animations';\nimport {\n  ContactLiCommon,\n  ContactContainerCommon,\n  FirstLetterNameCommon,\n  ContactCardCommon,\n  ContactContentCommon,\n  NameSpanCommon,\n  CallACommon,\n  ContainerIconCommon,\n  ContactActionsContainerCommon,\n  EditContactBtnCommon,\n  ContactBtnCommon,\n  LetterContainerCommon,\n  FirstLetterContactsGroupCommon,\n} from '../componentStyles';\n\nconst fadeInDownAnimation = keyframes`${fadeInDown}`;\nconst fadeInUpAnimation = keyframes`${fadeInUp}`;\n\nexport const ContactLi = styled.li`\n  ${ContactLiCommon};\n`;\n\nexport const ContactContainerDiv = styled.div`\n  ${ContactContainerCommon};\n  border: 1px solid ${({ theme }) => theme.colors.primary};\n  border-radius: ${({ theme }) => theme.borders.borderRadius};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => theme.colors.backgroundHover};\n    border: 1px solid ${({ theme }) => theme.colors.secondary};\n    box-shadow: ${({ theme }) => theme.shadows.hover};\n  }\n  animation: 300ms ${fadeInUpAnimation};\n`;\n\nexport const FirstLetterNameDiv = styled.div`\n  ${FirstLetterNameCommon};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n`;\n\nexport const ContactCardDiv = styled.div`\n  ${ContactCardCommon};\n`;\n\nexport const ContactContentP = styled.p`\n  ${ContactContentCommon};\n`;\n\nexport const NameSpan = styled.span`\n  ${NameSpanCommon};\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  color: ${({ theme }) => theme.colors.text};\n`;\nexport const PhoneSpan = styled.span`\n  $font-size: ${({ theme }) => theme.fontSizes.tiny};\n  color: ${({ theme }) => theme.colors.text};\n`;\nexport const CallA = styled.a`\n  ${CallACommon};\n`;\n\nexport const ContainerIconSpan = styled.span`\n  ${ContainerIconCommon};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n\n  :hover,\n  :focus {\n    box-shadow: ${({ theme }) => theme.shadows.hover};\n    background-color: ${({ theme }) => theme.colors.secondary};\n  }\n`;\n\nexport const ContactActionsContainer = styled.div`\n  border-radius: ${({ theme }) => theme.borders.borderRadius};\n  ${ContactActionsContainerCommon};\n\n  border-top: 1px solid ${({ theme }) => theme.colors.primary};\n  background-color: ${({ theme }) => theme.colors.backgroundHover};\n  animation: 300ms ${fadeInDownAnimation};\n`;\n\nexport const EditContactBtn = styled.button`\n  ${EditContactBtnCommon};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n\n  :hover,\n  :focus {\n    box-shadow: ${({ theme }) => theme.shadows.hover};\n    background-color: ${({ theme }) => theme.colors.white};\n    color: ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nexport const ContactDeleteBtn = styled.button`\n  ${ContactBtnCommon};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  background-color: ${({ theme }) => theme.colors.white};\n  color: ${({ theme }) => theme.colors.danger};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n\n  :hover,\n  :focus,\n  :active {\n    box-shadow: ${({ theme }) => theme.shadows.hover};\n    background-color: ${({ theme }) => theme.colors.danger};\n    color: ${({ theme }) => theme.colors.white};\n  }\n\n  :disabled {\n    background-color: ${({ theme }) => theme.colors.danger};\n    color: ${({ theme }) => theme.colors.white};\n  }\n`;\n\nexport const LetterContainerDiv = styled.div`\n  ${LetterContainerCommon};\n`;\n\nexport const FirstLetterContactsGroupDiv = styled.div`\n  ${FirstLetterContactsGroupCommon};\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  color: ${({ theme }) => theme.colors.text};\n`;\n","import styled, { keyframes } from 'styled-components';\nimport { fadeIn, zoomIn } from 'react-animations';\n\nconst fadeInAnimation = keyframes`${fadeIn}`;\n\nconst zoomInAnimation = keyframes`${zoomIn}`;\n\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.backgroundColorLoader};\n  backdrop-filter: blur(1px);\n  z-index: 998;\n  overflow-y: scroll;\n  overflow: hidden;\n\n  animation: 500ms ${fadeInAnimation};\n`;\n\nexport const ModalDiv = styled.div`\n  position: absolute;\n  padding: 60px 20px;\n  min-width: calc(100vw - 100px);\n  min-height: calc(100vh - 300px);\n  background-color: ${({ theme }) => theme.colors.backgroundModal};\n  border-radius: 18px;\n  border: 1px solid ${({ theme }) => theme.colors.primary};\n\n  animation: 300ms ${zoomInAnimation};\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  margin: 0;\n  border-radius: 50%;\n  background: inherit;\n  font-size: 60px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.pure};\n  outline: none;\n  border: none;\n  box-shadow: ${({ theme }) => theme.shadows.default};\n  transition: box-shadow 300ms, background-color 300ms, color 300ms ease;\n\n  :hover,\n  :focus {\n    box-shadow: ${({ theme }) => theme.shadows.hover};\n    background-color: ${({ theme }) => theme.colors.pure};\n    color: ${({ theme }) => theme.colors.danger};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { createPortal } from 'react-dom';\nimport { useThemeContext } from '../../hooks/ThemeContext'; \nimport { ModalBackdrop, ModalDiv, CloseBtn } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ children, onCloseModal, isOpenModal }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onCloseModal]);\n\n  const handleContentClick = e => {\n    e.stopPropagation();\n  };\n\n  useThemeContext();\n\n  return createPortal(\n    <ModalBackdrop onClick={onCloseModal} showModal={isOpenModal}>\n      <ModalDiv showModal={isOpenModal} onClick={handleContentClick}>\n        <CloseBtn type=\"button\" onClick={onCloseModal}>\n          <RiCloseCircleLine />\n        </CloseBtn>\n        {children}\n      </ModalDiv>\n    </ModalBackdrop>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n  isOpenModal: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport {FormCommon, LabelCommon, IconWrapperCommon, InputCommon, InputFormCommon, BtnCommon} from '../componentStyles';\nexport const FormContainer = styled.div`\n\n  margin-bottom: 30px;\n`;\n\nexport const Form = styled.form`\n  ${FormCommon};\n`;\n\nexport const LabelForm = styled.label`\n  ${LabelCommon};\n  font-size: ${({ theme }) => theme.fontSizes.tiny};\n  color: ${({ theme }) => theme.colors.text};\n\n  :focus-within {\n    color: ${({ theme }) => theme.colors.textFocus};\n    font-size: ${({ theme }) => theme.fontSizes.small};\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  ${IconWrapperCommon};\n  color: ${({ theme }) => theme.colors.placeholder};\n`;\n\nexport const LabelSpan = styled.span`\n  margin-left: 6px;\n  height: 16px;\n`;\n\nexport const InputForm = styled.input`\n  ${InputCommon};\n border: ${({ theme }) => theme.borders.border};\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  border-radius:  ${({ theme }) => theme.borders.borderRadius};\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.backgroundSecondary};\n  ${InputFormCommon};\n:hover,\n  :focus {\n    border-color: ${({ theme }) => theme.borders.borderColorHover};\n  }\n\n  :not(:placeholder-shown):required:valid {\n    border-color: ${({ theme }) => theme.borders.borderColorValid};\n  }\n\n  :not(:placeholder-shown):required:invalid {\n    border-color: ${({ theme }) => theme.borders.borderColorInvalid};\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.placeholder};\n  };\n`;\n\nexport const BtnForm = styled.button`\n  ${BtnCommon};\nfont-size: ${({ theme }) => theme.fontSizes.medium};\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.white};\n  border-radius:  ${({ theme }) => theme.borders.borderRadius};\n  cursor: ${props => (props.isLoading ? 'not-allowed' : 'pointer')};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n\n  :hover,\n  :focus {\n    box-shadow: ${({ theme }) => theme.shadows.hover};\n    background-color: ${props => (props.isLoading ? props.theme.colors.primary : props.theme.colors.secondary)};\n  }\n\n  :disabled {\n    background-color: rgba(39, 174, 96, 0.6);\n    box-shadow: ${({ theme }) => theme.shadows.default};\n    cursor: not-allowed;\n  }`;","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BsPersonPlus, BsTelephonePlus } from 'react-icons/bs';\nimport { editContact } from 'redux/operations/contactsOperations';\nimport { isLoadingSelector } from 'redux/selectors';\nimport {\n  FormContainer,\n  Form,\n  IconWrapper,\n  LabelForm,\n  LabelSpan,\n  InputForm,\n  BtnForm,\n} from './ContactFormEdit.styled';\nimport { useThemeContext } from '../../hooks/ThemeContext'; \n\nfunction ContactFormEdit({ contact, onCloseModal }) {\n\n  const isLoading = useSelector(isLoadingSelector);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(contact.name);\n  const [number, setNumber] = useState(contact.number);\n  const [isModified, setIsModified] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value.replace(/(^|\\s)\\S/g, match => match.toUpperCase()));\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleEditContact = async e => {\n    e.preventDefault();\n\n    try {\n      const editedName = name.trim() === '' ? contact.name : name;\n      const editedNumber = number.trim() === '' ? contact.number : number;\n\n      const patchResponse = await dispatch(\n        editContact({ id: contact.id, name: editedName, number: editedNumber })\n      );\n\n      if (patchResponse.meta.requestStatus === 'fulfilled') {\n        onCloseModal();\n      }\n\n      setIsModified(false);\n    } catch (error) {\n      console.error('Failed to edit contact:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (contact.name !== name || contact.number !== number) {\n      setIsModified(true);\n    } else {\n      setIsModified(false);\n    }\n  }, [contact, name, number]);\n\n  const isButtonDisabled = name.trim() === '' && number.trim() === '';\n\n  useThemeContext();\n  \n  return (\n    <FormContainer>\n      <Form onSubmit={handleEditContact}>\n        <LabelForm>\n          <IconWrapper>\n            <BsPersonPlus />\n          </IconWrapper>\n          <LabelSpan>Name</LabelSpan>\n          <InputForm\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-ЯґҐєЄіІїЇ]+(([' \\-][a-zA-Zа-яА-ЯґҐєЄіІїЇ ])?[a-zA-Zа-яА-ЯґҐєЄіІїЇ]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder={contact.name}\n            onChange={handleChange}\n          />\n        </LabelForm>\n        <LabelForm>\n          <IconWrapper>\n            <BsTelephonePlus />\n          </IconWrapper>\n          <LabelSpan>Number</LabelSpan>\n          <InputForm\n            type=\"tel\"\n            value={number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder={contact.number}\n            onChange={handleChange}\n          />\n        </LabelForm>\n\n        <BtnForm\n          type=\"submit\"\n          isLoading={isLoading}\n          disabled={isLoading || !isModified || isButtonDisabled}\n        >\n          Edit contact\n        </BtnForm>\n      </Form>\n    </FormContainer>\n  );\n}\n\nexport default ContactFormEdit;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BsPencil, BsTelephone, BsDashCircle } from 'react-icons/bs';\nimport { deleteContact } from 'redux/operations/contactsOperations';\nimport { uniqueFirstLettersContactsSelector } from 'redux/selectors';\nimport { useThemeContext } from '../../hooks/ThemeContext'; \nimport {\n  ContactLi,\n  FirstLetterContactsGroupDiv,\n  ContactContainerDiv,\n  FirstLetterNameDiv,\n  ContactCardDiv,\n  ContactContentP,\n  NameSpan,\n  PhoneSpan,\n  CallA,\n  ContainerIconSpan,\n  ContactActionsContainer,\n  EditContactBtn,\n  ContactDeleteBtn,\n  LetterContainerDiv,\n} from './ContactItem.styled';\nimport { Loader } from '../Loader/Loader';\nimport { getRandomHexColor } from 'helpers';\nimport Modal from '../Modal';\nimport ContactFormEdit from 'components/ContactFormEdit';\n\nconst ContactItem = ({ contact, selectedContactId, toggleActions }) => {\n  const uniqueFirstLetters = useSelector(uniqueFirstLettersContactsSelector);\n\n  const dispatch = useDispatch();\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [contactColors, setContactColors] = useState({});\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const { id, name, number } = contact;\n\n  const trimmedName =\n    contact.name.length > 24 ? `${contact.name.slice(0, 20)}...` : contact.name;\n\n  const isActionsContainerOpen = selectedContactId === contact.id;\n\n  const handleContactContentClick = () => {\n    toggleActions(id);\n  };\n\n  useEffect(() => {\n    if (!contactColors[contact.id]) {\n      const newColor = getRandomHexColor();\n      setContactColors(prevColors => ({\n        ...prevColors,\n        [contact.id]: newColor,\n      }));\n    }\n  }, [contact.id, contactColors]);\n\n  const onDeleteContact = contactId => {\n    setIsDeleting(true);\n    dispatch(deleteContact(contactId)).finally(() => {\n      setIsDeleting(false);\n    });\n  };\n\n  const handleEditButtonClick = () => {\n    setIsOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsOpenModal(false);\n  };\n\n  useThemeContext()\n  \n  return (\n    <ContactLi>\n      <ContactContainerDiv>\n        <ContactCardDiv>\n          <FirstLetterNameDiv\n            style={{ backgroundColor: contactColors[contact.id] }}\n          >\n            {name.charAt(0)}\n          </FirstLetterNameDiv>\n          <ContactContentP onClick={handleContactContentClick}>\n            <NameSpan>{trimmedName}</NameSpan>\n            <PhoneSpan>{number}</PhoneSpan>\n          </ContactContentP>\n          <CallA href={`tel:${number}`} title=\"Call\">\n            <ContainerIconSpan>\n              <BsTelephone />\n            </ContainerIconSpan>\n          </CallA>\n        </ContactCardDiv>\n\n        {isActionsContainerOpen && (\n          <ContactActionsContainer>\n            <EditContactBtn onClick={handleEditButtonClick}>\n              <BsPencil />\n              Edit\n            </EditContactBtn>\n            <ContactDeleteBtn\n              type=\"button\"\n              disabled={isDeleting}\n              onClick={() => onDeleteContact(contact.id)}\n            >\n              <BsDashCircle />\n              {isDeleting && <Loader />}\n              Delete\n            </ContactDeleteBtn>\n          </ContactActionsContainer>\n        )}\n      </ContactContainerDiv>\n      <LetterContainerDiv>\n        {uniqueFirstLetters.includes(id) && (\n          <FirstLetterContactsGroupDiv>\n            {name.charAt(0)}\n          </FirstLetterContactsGroupDiv>\n        )}\n      </LetterContainerDiv>\n      {isOpenModal && (\n        <Modal\n          contactId={contact.id}\n          onCloseModal={handleCloseModal}\n          isOpenModal={isOpenModal}\n        >\n          <ContactFormEdit contact={contact} onCloseModal={handleCloseModal} />\n        </Modal>\n      )}\n    </ContactLi>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  selectedContactId: PropTypes.string,\n  toggleActions: PropTypes.func,\n};\n\nexport default ContactItem;\n\n","import styled from 'styled-components';\nimport {\n  VisibilityHidden,\n  ContactsContainerCommon,\n  ContactUlCommon,\n  LoaderRotatingLinesContainerCommon,\n  EmptyContactsMessageCommon,\n} from '../componentStyles';\n\nexport const TitleHiddenH2 = styled.h2`\n  ${VisibilityHidden};\n`\n\nexport const ContactsContainer = styled.div`\n  ${ContactsContainerCommon}\n`;\n\nexport const ContactUl = styled.ul`\n  ${ContactUlCommon};\n`;\n\nexport const LoaderRotatingLinesContainer = styled.div`\n  ${LoaderRotatingLinesContainerCommon};\nbackground-color: ${({ theme }) => theme.colors.backgroundColorLoader};`;\n\nexport const EmptyContactsMessage = styled.p`\n  ${EmptyContactsMessageCommon};\nfont-size: ${({ theme }) => theme.fontSizes.large};`;\n\n\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { LoaderRotatingLines } from '../Loader/Loader';\nimport ContactItem from '../ContactItem';\nimport { fetchContacts } from 'redux/operations/contactsOperations';\nimport { useThemeContext } from '../../hooks/ThemeContext'; \nimport {\n  contactsSelector,\n  errorSelector,\n  memoizedFilteredContactsSelector,\n} from 'redux/selectors';\nimport {\n  TitleHiddenH2,\n  ContactsContainer,\n  LoaderRotatingLinesContainer,\n  ContactUl,\n  EmptyContactsMessage,\n} from './ContactList.styled';\n\n\nconst ContactList = () => {\n  const error = useSelector(errorSelector);\n  const filteredContacts = useSelector(memoizedFilteredContactsSelector);\n  const contacts = useSelector(contactsSelector);\n\n  const [isFetchingContacts, setIsFetchingContacts] = useState(false);\n  const [showEmptyMessage, setShowEmptyMessage] = useState(false);\n  const [selectedContactId, setSelectedContactId] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const contactsLength = contacts.length;\n  const isEmptyFilter = filteredContacts.length === 0;\n\n  useEffect(() => {\n    setIsFetchingContacts(true);\n    dispatch(fetchContacts()).finally(() => {\n      setIsFetchingContacts(false);\n      setShowEmptyMessage(true);\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    error && toast.error(error);\n  }, [error]);\n\n  const toggleActions = contactId => {\n    setSelectedContactId(prevId => (prevId === contactId ? null : contactId));\n  };\n  \n  useEffect(() => {\n    if (selectedContactId === null) {\n      toggleActions(selectedContactId);\n    }\n  }, [selectedContactId]);\n  \n  useThemeContext();\n  \n  if (isFetchingContacts) {\n    return (\n      <LoaderRotatingLinesContainer>\n        <LoaderRotatingLines />\n      </LoaderRotatingLinesContainer>\n    );\n  }\n\n  if (contactsLength === 0 && showEmptyMessage && !error) {\n    return (\n      <EmptyContactsMessage>Please add your first contact</EmptyContactsMessage>\n    );\n  }\n\n  if (contactsLength > 0 && isEmptyFilter) {\n    return <EmptyContactsMessage>No matching contacts</EmptyContactsMessage>;\n  }\n  \n\n  return (\n    <section>\n      <TitleHiddenH2>Сontact list</TitleHiddenH2>\n      <ContactsContainer>\n        {!isEmptyFilter && (\n          <ContactUl>\n            {filteredContacts.map(contact => (\n              <ContactItem\n                key={contact.id}\n                contact={contact}\n                selectedContactId={selectedContactId}\n                toggleActions={toggleActions}\n              />\n            ))}\n          </ContactUl>\n        )}\n      </ContactsContainer>\n    </section>\n  );\n};\n\nexport default ContactList;\n\n\n","import styled from 'styled-components';\nimport PhoneInput from 'react-phone-number-input';\nimport {VisibilityHidden, FormCommon, InputFormCommon, LabelCommon, IconWrapperCommon, InputCommon, BtnCommon } from '../componentStyles';\n\nexport const TitleHiddenH2 = styled.h2`\n  ${VisibilityHidden};\n`\n\nexport const FormContainer = styled.div`\n  position: sticky;\n  top: 0;\n  z-index: 2;\n  padding: 30px 0 0;\n`;\n\nexport const Form = styled.form`\n  ${FormCommon};\n  margin-right: 20px;\n\n  @media screen and (min-width: 717px) {\n    margin-right: 0;\n  }\n`;\n\nexport const LabelForm = styled.label`\n  ${LabelCommon};\n  font-size: ${({ theme }) => theme.fontSizes.tiny};\n  color: ${({ theme }) => theme.colors.text};\n\n  :focus-within {\n    color: ${({ theme }) => theme.colors.textFocus};\n    font-size: ${({ theme }) => theme.fontSizes.small};\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  ${IconWrapperCommon};\n  color: ${({ theme }) => theme.colors.placeholder};\n`;\n\nexport const LabelSpan = styled.span`\n  margin-left: 6px;\n  height: 16px;\n`;\n\nexport const InputForm = styled.input`\n  ${InputCommon};\n  border: ${({ theme }) => theme.borders.border};\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  border-radius:  ${({ theme }) => theme.borders.borderRadius};\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.backgroundSecondary};\n  ${InputFormCommon};\n\n  :hover,\n  :focus {\n    border-color: ${({ theme }) => theme.borders.borderColorHover};\n  }\n\n  :not(:placeholder-shown):required:valid {\n    border-color: ${({ theme }) => theme.borders.borderColorValid};\n  }\n\n  :not(:placeholder-shown):required:invalid {\n    border-color: ${({ theme }) => theme.borders.borderColorInvalid};\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.placeholder};\n  };\n  \n`;\n\nexport const StyledPhoneInput = styled(PhoneInput)`\n\n  input {\n    ${InputCommon};\n    display: flex;\n    align-items: center;\n    width: calc(100% - 46px);\n  border: ${({ theme }) => theme.borders.border};\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  border-radius:  ${({ theme }) => theme.borders.borderRadius};\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.backgroundSecondary};\n  ${InputFormCommon};\n\n  :hover,\n  :focus {\n    border-color: ${({ theme }) => theme.borders.borderColorHover};\n  }\n\n  :not(:placeholder-shown):required:valid {\n    border-color: ${({ theme }) => theme.borders.borderColorValid};\n  }\n\n  :not(:placeholder-shown):required:invalid {\n    border-color: ${({ theme }) => theme.borders.borderColorInvalid};\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.placeholder};\n  };\n  }\n\n  .PhoneInputCountryIcon {\n    position: absolute;\n    top: 50%;\n    left: 6px;\n    height: 16px;\n    width: 25px;\n    border: ${({ theme }) => theme.borders.border};\n  }\n\n  .PhoneInputCountrySelect {\n    position: absolute;\n    height: 35px;\n    width: 30px;\n    top: 34%;\n    left: 3px;\n    opacity: 0;\n    z-index: 10;\n    cursor: pointer;\n  }\n`;\n\nexport const BtnForm = styled.button`\n  ${BtnCommon};\nfont-size: ${({ theme }) => theme.fontSizes.medium};\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.white};\n  border-radius:  ${({ theme }) => theme.borders.borderRadius};\n  cursor: ${props => (props.isLoading ? 'not-allowed' : 'pointer')};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n\n  :hover,\n  :focus {\n    box-shadow: ${({ theme }) => theme.shadows.hover};\n    background-color: ${props => (props.isLoading ? props.theme.colors.primary : props.theme.colors.secondary)};\n  }\n\n  :disabled {\n    background-color: rgba(39, 174, 96, 0.6);\n    box-shadow: ${({ theme }) => theme.shadows.default};\n    cursor: not-allowed;\n  }`;\n","import styled, { keyframes } from 'styled-components';\nimport { fadeInDown, fadeInUp } from 'react-animations';\nimport {\n  ContactLiCommon,\n  ContactContainerCommon,\n  FirstLetterNameCommon,\n  ContactCardCommon,\n  ContactContentCommon,\n  NameSpanCommon,\n  ContainerIconCommon,\n  ContactActionsContainerCommon,\n  EditContactBtnCommon,\n  ContactBtnCommon,\n} from '../componentStyles';\n\nconst fadeInDownAnimation = keyframes`${fadeInDown}`;\nconst fadeInUpAnimation = keyframes`${fadeInUp}`;\n\nexport const ContactLi = styled.li`\n  ${ContactLiCommon};\n`;\n\nexport const ContactContainerDiv = styled.div`\n  ${ContactContainerCommon};\n  border: 1px solid ${({ theme }) => theme.colors.primary};\n  border-radius: ${({ theme }) => theme.borders.borderRadius};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => theme.colors.backgroundHover};\n    border: 1px solid ${({ theme }) => theme.colors.secondary};\n    box-shadow: ${({ theme }) => theme.shadows.hover};\n  }\n  animation: 300ms ${fadeInUpAnimation};\n`;\n\nexport const FirstLetterNameDiv = styled.div`\n  ${FirstLetterNameCommon};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n`;\n\nexport const ContactCardDiv = styled.div`\n  ${ContactCardCommon};\n`;\n\nexport const ContactContentP = styled.p`\n  ${ContactContentCommon};\n`;\n\nexport const NameSpan = styled.span`\n  ${NameSpanCommon};\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  color: ${({ theme }) => theme.colors.text};\n`;\nexport const PhoneSpan = styled.span`\n  $font-size: ${({ theme }) => theme.fontSizes.tiny};\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nexport const ContainerIconSpan = styled.span`\n  ${ContainerIconCommon};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n\n  :hover,\n  :focus {\n    box-shadow: ${({ theme }) => theme.shadows.hover};\n    background-color: ${({ theme }) => theme.colors.secondary};\n  }\n`;\n\nexport const ContactActionsContainer = styled.div`\n  border-radius: ${({ theme }) => theme.borders.borderRadius};\n  ${ContactActionsContainerCommon};\n\n  border-top: 1px solid ${({ theme }) => theme.colors.primary};\n  background-color: ${({ theme }) => theme.colors.backgroundHover};\n  animation: 300ms ${fadeInDownAnimation};\n`;\n\nexport const EditContactBtn = styled.button`\n  ${EditContactBtnCommon};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n\n  :hover,\n  :focus {\n    box-shadow: ${({ theme }) => theme.shadows.hover};\n    background-color: ${({ theme }) => theme.colors.white};\n    color: ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nexport const ContactDeleteBtn = styled.button`\n  ${ContactBtnCommon};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  background-color: ${({ theme }) => theme.colors.white};\n  color: ${({ theme }) => theme.colors.danger};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n\n  :hover,\n  :focus,\n  :active {\n    box-shadow: ${({ theme }) => theme.shadows.hover};\n    background-color: ${({ theme }) => theme.colors.danger};\n    color: ${({ theme }) => theme.colors.white};\n  }\n\n  :disabled {\n    background-color: ${({ theme }) => theme.colors.danger};\n    color: ${({ theme }) => theme.colors.white};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { BsPencil, BsDashCircle } from 'react-icons/bs';\nimport { deleteContact } from 'redux/operations/contactsOperations';\nimport { useThemeContext } from '../../hooks/ThemeContext'; \nimport {\n  ContactLi,\n  ContactContainerDiv,\n  FirstLetterNameDiv,\n  ContactCardDiv,\n  ContactContentP,\n  NameSpan,\n  PhoneSpan,\n  ContactActionsContainer,\n  EditContactBtn,\n  ContactDeleteBtn,\n} from './RecentlyAddedContactItem.styled';\nimport { Loader } from '../Loader/Loader';\nimport { getRandomHexColor } from 'helpers';\nimport Modal from '../Modal';\nimport ContactFormEdit from 'components/ContactFormEdit';\n\nconst RecentlyAddedContactItem = ({ contact, selectedContactId, toggleActions }) => {\n\n  const dispatch = useDispatch();\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [contactColors, setContactColors] = useState({});\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const { id, name, number } = contact;\n\n  const trimmedName =\n    contact.name.length > 34 ? `${contact.name.slice(0, 30)}...` : contact.name;\n\n  const isActionsContainerOpen = selectedContactId === contact.id;\n\n  const handleContactContentClick = () => {\n    toggleActions(id);\n  };\n\n  useEffect(() => {\n    if (!contactColors[contact.id]) {\n      const newColor = getRandomHexColor();\n      setContactColors(prevColors => ({\n        ...prevColors,\n        [contact.id]: newColor,\n      }));\n    }\n  }, [contact.id, contactColors]);\n\n  const onDeleteContact = contactId => {\n    setIsDeleting(true);\n    dispatch(deleteContact(contactId)).finally(() => {\n      setIsDeleting(false);\n    });\n  };\n\n  const handleEditButtonClick = () => {\n    setIsOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsOpenModal(false);\n  };\n\n  useThemeContext();\n\n  return (\n    <ContactLi>\n      <ContactContainerDiv>\n        <ContactCardDiv>\n          <FirstLetterNameDiv\n            style={{ backgroundColor: contactColors[contact.id] }}\n          >\n            {name.charAt(0)}\n          </FirstLetterNameDiv>\n          <ContactContentP onClick={handleContactContentClick}>\n            <NameSpan>{trimmedName}</NameSpan>\n            <PhoneSpan>{number}</PhoneSpan>\n          </ContactContentP>\n        </ContactCardDiv>\n\n        {isActionsContainerOpen && (\n          <ContactActionsContainer>\n            <EditContactBtn onClick={handleEditButtonClick}>\n              <BsPencil />\n              Edit\n            </EditContactBtn>\n            <ContactDeleteBtn\n              type=\"button\"\n              disabled={isDeleting}\n              onClick={() => onDeleteContact(contact.id)}\n            >\n              <BsDashCircle />\n              {isDeleting && <Loader />}\n              Delete\n            </ContactDeleteBtn>\n          </ContactActionsContainer>\n        )}\n      </ContactContainerDiv>\n      {isOpenModal && (\n        <Modal\n          contactId={contact.id}\n          onCloseModal={handleCloseModal}\n          isOpenModal={isOpenModal}\n        >\n          <ContactFormEdit contact={contact} onCloseModal={handleCloseModal} />\n        </Modal>\n      )}\n    </ContactLi>\n  );\n};\n\nRecentlyAddedContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  selectedContactId: PropTypes.string,\n  toggleActions: PropTypes.func,\n};\n\nexport default RecentlyAddedContactItem;\n\n","import styled from 'styled-components';\nimport {\n  ContactsContainerCommon,\n  ContactUlCommon,\n  LoaderRotatingLinesContainerCommon,\n  EmptyContactsMessageCommon,\n} from '../componentStyles';\n\nexport const TitleH2 = styled.h2`\n  font-size: 24px;\n  font-weight: 500;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.text};\n  margin-top: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const ContactsContainer = styled.div`\n  ${ContactsContainerCommon}\n`;\n\nexport const ContactUl = styled.ul`\n  ${ContactUlCommon};\n  height: 335px;\n  overflow: auto;\n`;\n\nexport const LoaderRotatingLinesContainer = styled.div`\n  ${LoaderRotatingLinesContainerCommon};\n  background-color: ${({ theme }) => theme.colors.backgroundColorLoader};\n`;\n\nexport const EmptyContactsMessage = styled.p`\n  ${EmptyContactsMessageCommon};\n  font-size: ${({ theme }) => theme.fontSizes.large};\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LoaderRotatingLines } from '../Loader/Loader';\nimport RecentlyAddedContactItem from '../RecentlyAddedContactItem/RecentlyAddedContactItem'\nimport { fetchContacts } from 'redux/operations/contactsOperations';\nimport { useThemeContext } from '../../hooks/ThemeContext'; \nimport {\n  contactsSelector,\n} from 'redux/selectors';\nimport {\n  TitleH2,\n  ContactsContainer,\n  LoaderRotatingLinesContainer,\n  ContactUl,\n} from './RecentlyAddedContacts.styled';\n\n\nconst RecentlyAddedContacts = () => {\n  const contacts = useSelector(contactsSelector);\n\n  const [isFetchingContacts, setIsFetchingContacts] = useState(false);\n  const [selectedContactId, setSelectedContactId] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const isEmptyFilter = contacts.length === 0;\n\n  useEffect(() => {\n    setIsFetchingContacts(true);\n    dispatch(fetchContacts()).finally(() => {\n      setIsFetchingContacts(false);\n    });\n  }, [dispatch]);\n\n\n  const toggleActions = contactId => {\n    setSelectedContactId(prevId => (prevId === contactId ? null : contactId));\n  };\n\n  useEffect(() => {\n    if (selectedContactId === null) {\n      toggleActions(selectedContactId);\n    }\n  }, [selectedContactId]);\n  \n  useThemeContext();\n\n  if (isFetchingContacts) {\n    return (\n      <LoaderRotatingLinesContainer>\n        <LoaderRotatingLines />\n      </LoaderRotatingLinesContainer>\n    );\n  };\n\n  return (\n    <section>\n      <TitleH2>Recently added contacts</TitleH2>\n      <ContactsContainer>\n      {!isEmptyFilter && (\n          <ContactUl>\n            {contacts.slice().reverse().map(contact => (\n              <RecentlyAddedContactItem\n                key={contact.id}\n                contact={contact}\n                selectedContactId={selectedContactId}\n                toggleActions={toggleActions}\n              />\n            ))}\n          </ContactUl>\n        )}\n      </ContactsContainer>\n    </section>\n  );\n};\n\nexport default RecentlyAddedContacts;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMediaQuery } from '@react-hook/media-query';\nimport { BsPersonPlus } from 'react-icons/bs';\nimport { addContact } from 'redux/operations/contactsOperations';\nimport { isLoadingSelector } from 'redux/selectors';\nimport { useThemeContext } from '../../hooks/ThemeContext'; \nimport {\n  TitleHiddenH2,\n  FormContainer,\n  Form,\n  IconWrapper,\n  LabelForm,\n  LabelSpan,\n  InputForm,\n  StyledPhoneInput,\n  BtnForm,\n} from './ContactForm.styled';\n\nimport RecentlyAddedContacts from '../RecentlyAddedContacts';\n\nfunction ContactForm() {\n  const isLoading = useSelector(isLoadingSelector);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const isLargeScreen = useMediaQuery('(min-width: 1024px)');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'name') {\n      setName(value.replace(/(^|\\s)\\S/g, match => match.toUpperCase()));\n    }\n  };\n\n  const handleAddContact = e => {\n    e.preventDefault();\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n  \n  \n  const isButtonDisabled = name.trim() === '' || number === '';\n\n  useThemeContext()\n\n  return (\n    <section>\n      <TitleHiddenH2>Add contact</TitleHiddenH2>\n      <FormContainer>\n        <Form onSubmit={handleAddContact}>\n          <LabelForm>\n            <IconWrapper>\n              <BsPersonPlus />\n            </IconWrapper>\n            <LabelSpan>Name</LabelSpan>\n            <InputForm\n              type=\"text\"\n              value={name}\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-ЯґҐєЄіІїЇ]+(([' \\-][a-zA-Zа-яА-ЯґҐєЄіІїЇ ])?[a-zA-Zа-яА-ЯґҐєЄіІїЇ]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              placeholder=\"Enter name\"\n              onChange={handleChange}\n            />\n          </LabelForm>\n          <LabelForm>\n            <LabelSpan>Number</LabelSpan>\n            <StyledPhoneInput\n              defaultCountry=\"UA\"\n              placeholder=\"Enter phone number\"\n              pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              value={number}\n              onChange={setNumber}\n            />\n          </LabelForm>\n\n          <BtnForm\n            type=\"submit\"\n            isLoading={isLoading}\n            disabled={isLoading || isButtonDisabled}\n          >\n            Add contact\n          </BtnForm>\n        </Form>\n\n        {isLargeScreen && <RecentlyAddedContacts />}\n      </FormContainer>\n    </section>\n  );\n}\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContactsContainerDiv = styled.div`\n  display: block;\n  gap: 20px;\n\n  @media screen and (min-width: 668px) {\n    display: flex; \n    justify-content: space-between;\n  }\n\n  @media screen and (min-width: 1200px) {\n    justify-content: center;\n    gap: 60px;\n  }\n`;\n\nexport const ContentContainerDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n`","import Filter from '../Filter';\nimport ContactList from '../ContactList';\nimport ContactForm from '../ContactForm';\nimport { ContactsContainerDiv, ContentContainerDiv } from './Contacts.styled';\n\nexport default function Contacts() {\n\n  return (\n    <ContactsContainerDiv>\n      <ContactForm />\n      <ContentContainerDiv> \n      <Filter />\n      <ContactList />\n      </ContentContainerDiv>\n    </ContactsContainerDiv>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/operations/contactsOperations';\nimport Contacts from '../components/Contacts';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n      <Contacts />\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const contactsSelector = state => state.contacts.items;\n\n\nconst memoizedContactsSelector = createSelector(contactsSelector, contacts =>\n  [...contacts].sort((a, b) => a.name.localeCompare(b.name))\n);\n\nexport const isLoadingSelector = state => state.contacts.isLoading;\n\nexport const errorSelector = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const memoizedFilteredContactsSelector = createSelector(\n  [memoizedContactsSelector, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.trim().toLowerCase();\n    \n    if (normalizedFilter.length === 1) {\n      const filteredByFirstChar = contacts.filter(\n        contact => contact.name.charAt(0).toUpperCase() === normalizedFilter.toUpperCase()\n      );\n\n      return filteredByFirstChar.sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizedFilter) ||\n        contact.number.includes(filter)\n    );\n  }\n);\n\nexport const uniqueFirstLettersContactsSelector = createSelector(\n  [memoizedFilteredContactsSelector],\n  filteredContacts => {\n    const firstLetters = {};\n\n    filteredContacts.forEach(contact => {\n      const firstLetter = contact.name.charAt(0).toUpperCase();\n      if (!firstLetters[firstLetter]) {\n        firstLetters[firstLetter] = contact.id;\n      }\n    });\n\n    return Object.values(firstLetters);\n  }\n);\n\n"],"names":["FilterSection","styled","theme","colors","backgroundGradient","backgroundGradientTransparent","TitleHiddenH2","VisibilityHidden","FilterContainer","FilterName","fontSizes","tiny","text","textFocus","small","IconWrapper","IconWrapperCommon","props","isEmptyFilter","danger","placeholder","LabelP","FilterInput","InputCommon","borders","border","medium","borderRadius","backgroundSecondary","secondary","LoaderContainer","filter","useSelector","selectFilter","isLoading","isLoadingSelector","memoizedFilteredContactsSelector","length","dispatch","useDispatch","useEffect","setFilter","firstChar","trim","charAt","label","isNaN","useThemeContext","DebounceInput","element","type","value","debounceTimeout","onChange","e","target","Loader","fadeInDownAnimation","keyframes","fadeInDown","fadeInUpAnimation","fadeInUp","ContactLi","ContactLiCommon","ContactContainerDiv","ContactContainerCommon","primary","shadows","default","backgroundHover","hover","FirstLetterNameDiv","FirstLetterNameCommon","white","ContactCardDiv","ContactCardCommon","ContactContentP","ContactContentCommon","NameSpan","NameSpanCommon","PhoneSpan","CallA","CallACommon","ContainerIconSpan","ContainerIconCommon","ContactActionsContainer","ContactActionsContainerCommon","EditContactBtn","EditContactBtnCommon","ContactDeleteBtn","ContactBtnCommon","LetterContainerDiv","LetterContainerCommon","FirstLetterContactsGroupDiv","FirstLetterContactsGroupCommon","fadeInAnimation","fadeIn","zoomInAnimation","zoomIn","ModalBackdrop","backgroundColorLoader","ModalDiv","backgroundModal","CloseBtn","pure","modalRoot","document","querySelector","children","onCloseModal","isOpenModal","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","onClick","showModal","stopPropagation","FormContainer","Form","FormCommon","LabelForm","LabelCommon","LabelSpan","InputForm","InputFormCommon","borderColorHover","borderColorValid","borderColorInvalid","BtnForm","BtnCommon","contact","useState","name","setName","number","setNumber","isModified","setIsModified","handleChange","currentTarget","replace","match","toUpperCase","handleEditContact","preventDefault","editedName","editedNumber","editContact","id","meta","requestStatus","console","error","isButtonDisabled","onSubmit","pattern","title","disabled","selectedContactId","toggleActions","uniqueFirstLetters","uniqueFirstLettersContactsSelector","isDeleting","setIsDeleting","contactColors","setContactColors","setIsOpenModal","trimmedName","slice","isActionsContainerOpen","newColor","getRandomHexColor","prevColors","handleCloseModal","style","backgroundColor","href","contactId","deleteContact","finally","includes","ContactsContainer","ContactsContainerCommon","ContactUl","ContactUlCommon","LoaderRotatingLinesContainer","LoaderRotatingLinesContainerCommon","EmptyContactsMessage","EmptyContactsMessageCommon","large","errorSelector","filteredContacts","contacts","contactsSelector","isFetchingContacts","setIsFetchingContacts","showEmptyMessage","setShowEmptyMessage","setSelectedContactId","contactsLength","fetchContacts","toast","prevId","map","StyledPhoneInput","PhoneInput","TitleH2","reverse","isLargeScreen","useMediaQuery","addContact","required","defaultCountry","ContactsContainerDiv","ContentContainerDiv","Contacts","ContactsPage","state","items","memoizedContactsSelector","createSelector","sort","a","b","localeCompare","normalizedFilter","toLowerCase","firstLetters","forEach","firstLetter","Object","values"],"sourceRoot":""}