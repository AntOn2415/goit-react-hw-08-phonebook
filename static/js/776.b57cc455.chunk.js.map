{"version":3,"file":"static/js/776.b57cc455.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.js","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  margin-bottom: 30px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n`;\n\nexport const LabelForm = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  font-weight: 700;\n  font-size: 12px;\n  color: #333;\n  transition: color 300ms ease;\n  transition: font-size 300ms ease;\n\n  :focus-within {\n    color: #000;\n    font-size: 14px;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  position: absolute;\n  top: 55%;\n  left: 10px;\n  transition: color 300ms ease;\n  color: #777;\n`;\n\nexport const LabelSpan = styled.span`\n  margin-left: 6px;\n  height: 16px;\n`;\n\nexport const InputForm = styled.input`\n  min-width: 180px;\n  padding: 8px;\n  padding-left: 26px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  color: #333;\n  outline: none;\n  transition: border-color 300ms ease;\n\n  :hover,\n  :focus {\n    border-color: #27ae60;\n  }\n\n  :not(:placeholder-shown):required:valid {\n    border-color: #27ae60;\n  }\n\n  :not(:placeholder-shown):required:invalid {\n    border-color: #f4442e;\n  }\n\n  ::placeholder {\n    color: #777;\n  }\n`;\n\nexport const BtnForm = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 5px;\n  width: 100%;\n  padding: 10px;\n  background-color: #27ae60;\n  color: #fff;\n  outline: none;\n  border: none;\n  border-radius: 10px;\n  cursor: ${props => (props.isLoading ? 'not-allowed' : 'pointer')};\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n  transition: background-color 300ms ease;\n\n  :hover,\n  :focus {\n    background-color: ${props => (props.isLoading ? '#27ae60' : '#2ecc71')};\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BsPersonPlus, BsUnlock, BsLock, BsEnvelopeAt } from 'react-icons/bs';\nimport { authOperations } from 'redux/auth';\nimport { isLoadingSelector } from 'redux/selectors';\nimport {\n  FormContainer,\n  Form,\n  IconWrapper,\n  LabelForm,\n  LabelSpan,\n  InputForm,\n  BtnForm,\n} from './RegisterForm.styled';\n\nfunction RegisterForm() {\n  const isLoading = useSelector(isLoadingSelector);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value.replace(/(^|\\s)\\S/g, match => match.toUpperCase()));\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      case 'confirmPassword':\n        setConfirmPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(\n      authOperations.register({\n        name,\n        email,\n        password,\n      })\n    );\n    setName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n  };\n\n  const isPasswordValid =\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d!@#$%^&*]{8,}$/.test(password);\n\n  const doPasswordsMatch = password && password === confirmPassword;\n\n  return (\n    <FormContainer>\n      <Form onSubmit={handleSubmit}>\n        <LabelForm>\n          <IconWrapper>\n            <BsPersonPlus />\n          </IconWrapper>\n          <LabelSpan>Name</LabelSpan>\n          <InputForm\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-ЯґҐєЄіІїЇ]+(([' \\-][a-zA-Zа-яА-ЯґҐєЄіІїЇ ])?[a-zA-Zа-яА-ЯґҐєЄіІїЇ]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter name\"\n            onChange={handleChange}\n          />\n        </LabelForm>\n        <LabelForm>\n          <IconWrapper>\n            <BsEnvelopeAt />\n          </IconWrapper>\n          <LabelSpan>Email</LabelSpan>\n          <InputForm\n            type=\"email\"\n            value={email}\n            name=\"email\"\n            title=\"Please enter a valid email address\"\n            required\n            placeholder=\"Enter email\"\n            onChange={handleChange}\n          />\n        </LabelForm>\n        <LabelForm>\n          <IconWrapper>\n            {isPasswordValid ? <BsLock /> : <BsUnlock />}\n          </IconWrapper>\n          <LabelSpan>Password</LabelSpan>\n          <InputForm\n            type=\"password\"\n            value={password}\n            name=\"password\"\n            pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d!@#$%^&*]{8,}$\"\n            title=\"Password must be at least 8 characters long and include at least one uppercase letter, one lowercase letter, and one digit.\"\n            minLength={8}\n            required\n            placeholder=\"Enter password\"\n            onChange={handleChange}\n          />\n        </LabelForm>\n        <LabelForm>\n          <IconWrapper>\n            {doPasswordsMatch ? <BsLock /> : <BsUnlock />}\n          </IconWrapper>\n          <LabelSpan>Confirm Password</LabelSpan>\n          <InputForm\n            type=\"password\"\n            value={confirmPassword}\n            name=\"confirmPassword\"\n            pattern={password}\n            minLength={8}\n            required\n            placeholder=\"Confirm password\"\n            onChange={handleChange}\n            title=\"Please confirm your password\"\n          />\n        </LabelForm>\n        <BtnForm type=\"submit\" isLoading={isLoading} disabled={isLoading}>\n          Register\n        </BtnForm>\n      </Form>\n    </FormContainer>\n  );\n}\n\nexport default RegisterForm;\n","import { Helmet } from 'react-helmet';\nimport RegisterForm from '../components/RegisterForm';\n\nexport default function RegisterPage () {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const contactsSelector = state => state.contacts.items;\n\nconst memoizedContactsSelector = createSelector(contactsSelector, contacts =>\n  [...contacts].sort((a, b) => a.name.localeCompare(b.name))\n);\n\nexport const isLoadingSelector = state => state.contacts.isLoading;\nexport const errorSelector = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const memoizedFilteredContactsSelector = createSelector(\n  [memoizedContactsSelector, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\nexport const uniqueFirstLettersContactsSelector = createSelector(\n  [memoizedFilteredContactsSelector],\n  (filteredContacts) => {\n    const firstLetters = {};\n\n    filteredContacts.forEach((contact) => {\n      const firstLetter = contact.name.charAt(0).toUpperCase();\n      if (!firstLetters[firstLetter]) {\n        firstLetters[firstLetter] = contact.id;\n      }\n    });\n\n    return Object.values(firstLetters);\n  }\n);\n"],"names":["FormContainer","styled","Form","LabelForm","IconWrapper","LabelSpan","InputForm","BtnForm","props","isLoading","useSelector","isLoadingSelector","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleChange","e","currentTarget","value","replace","match","toUpperCase","isPasswordValid","test","doPasswordsMatch","onSubmit","preventDefault","authOperations","type","pattern","title","required","placeholder","onChange","minLength","disabled","RegisterPage","Helmet","contactsSelector","state","contacts","items","memoizedContactsSelector","createSelector","sort","a","b","localeCompare","errorSelector","error","selectFilter","filter","memoizedFilteredContactsSelector","normalizedFilter","toLowerCase","contact","includes","uniqueFirstLettersContactsSelector","filteredContacts","firstLetters","forEach","firstLetter","charAt","id","Object","values"],"sourceRoot":""}